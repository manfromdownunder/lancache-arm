name: Build

on:
  schedule:
    # update the images every morning
    - cron: "0 0 * * *"
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2
      - name: Repo metadata
        id: repo
        uses: actions/github-script@v3
        with:
          script: |
            const repo = await github.repos.get(context.repo)
            return repo.data

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v1.8.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build & Push jwilder/nginx-proxy for armv7
        run: |
          git clone https://github.com/jwilder/nginx-proxy.git
          cd nginx-proxy
          sed -i 's/amd64/armhf/g' Dockerfile
          docker buildx build --platform linux/arm/v7 -t manfromdownunder/jwilder-nginx-proxy-armv7 --push .
          cd ..
          rm -rf nginx-proxy

      - name: Build & Push lancachenet/ubuntu
        run: |
          git clone https://github.com/lancachenet/ubuntu.git
          cd ubuntu
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
          docker buildx create --name multiarch --driver docker-container --use
          docker buildx inspect --bootstrap    
          docker buildx build --platform linux/arm/v7,linux/arm64 -t manfromdownunder/lancachenet-ubuntu --push .
          cd ..

      - name: Build & Push lancachenet/ubuntu-nginx
        run: |
          git clone https://github.com/lancachenet/ubuntu-nginx.git
          cd ubuntu-nginx
          sed -i '1cFROM manfromdownunder/lancachenet-ubuntu' Dockerfile
          cat Dockerfile
          docker buildx build --platform linux/arm/v7,linux/arm64 -t manfromdownunder/lancachenet-ubuntu-nginx --push .
          cd ..

      - name: Build & Push manfromdownunder/generic
        run: |
          git clone https://github.com/manfromdownunder/lancache-generic.git
          cd generic
          sed -i '1cFROM lancachenet/ubuntu-nginx' Dockerfile
          cat Dockerfile
          sed -i '29cproxy_max_temp_file_size 1024m;' overlay/etc/nginx/sites-available/generic.conf.d/root/20_cache.conf
          docker buildx build --platform linux/arm/v7,linux/arm64 -t manfromdownunder/lancachenet-generic --push .
          cd ..

      - name: Build & Push lancachenet/monolithic
        run: |
          git clone https://github.com/lancachenet/monolithic.git
          cd monolithic
          sed -i '1cFROM manfromdownunder/lancachenet-generic' Dockerfile
          cat Dockerfile
          docker buildx build --platform linux/arm/v7,linux/arm64 -t manfromdownunder/lancachenet-monolithic --push .
          cd ..

      - name: Build & Push lancachenet/lancache-dns
        run: |
          git clone https://github.com/manfromdownunder/lancache-dns.git
          cd lancache-dns
          sed -i '1cFROM manfromdownunder/lancachenet-ubuntu' Dockerfile
          cat Dockerfile
          docker buildx build --platform linux/arm/v7,linux/arm64 -t manfromdownunder/lancachenet-lancache-dns --push .
          cd ..
